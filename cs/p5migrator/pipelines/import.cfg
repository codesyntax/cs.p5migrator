[transmogrifier]
pipeline =
    catalogsource
    insert_subject
    insert_content_categories
    insert_portal_type
    insert_effective
    remove_id
    path_adjustment
    clean_path
    substitution
    map_fields
    constructor
    commentsimporter
    multilingual
    uidupdater
    schemaupdater
    local_roles
    owner
    interfacesupdater
    annotations_updater
    propertiesupdater
    workflow
    workflow_history
    reindexobject
    logger
    savepoint

[catalogsource]
blueprint = collective.jsonmigrator.catalogsource
remote-url = http://localhost:7777/codesyntax
remote-username = admin
remote-password = admin
catalog-path = /portal_catalog
catalog-query = {'Language': ['en', 'es', 'eu']}

[clean_path]
blueprint = collective.transmogrifier.sections.inserter
key = string:_path
value = python: item.get('_path', '').replace('/codesyntax/', '')

[substitution]
blueprint = quintagroup.transmogrifier.substitution
key = _type
DonEdukia = FolderishPage
ATFolder = FolderishPage
Folder = FolderishPage

[insert_subject]
blueprint = collective.transmogrifier.sections.inserter
key = string:subject
value = python: item.get('subject', [])

[insert_content_categories]
blueprint = collective.transmogrifier.sections.inserter
key = string:content_categories
value = python: item.get('content_categories', [])

[insert_portal_type]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = python: item.get('_type')

[path_adjustment]
blueprint = collective.transmogrifier.sections.inserter
key = string:_path
value = python: item.get('_path')

[insert_effective]
blueprint = collective.transmogrifier.sections.inserter
key = string:effective
value = python: item.get('effectiveDate', None)


[remove_id]
blueprint = collective.transmogrifier.sections.manipulator
delete = id

[map_fields]
blueprint = ftw.blueprints.fieldmapper
field-mapping = python:{}

[constructor]
blueprint = collective.transmogrifier.sections.constructor
type-key = _type
path-key = _path
cache = false

[commentsimporter]
blueprint = cs.p5migrator.discussion


[multilingual]
blueprint = ftw.blueprints.multilingual.linguaploneitemlinker

[uidupdater]
blueprint = plone.app.transmogrifier.uidupdater

[schemaupdater]
blueprint = transmogrify.dexterity.schemaupdater

[local_roles]
blueprint = collective.blueprint.jsonmigrator.ac_local_roles
local-roles-key = _local_roles

[owner]
blueprint = collective.jsonmigrator.owner
owner-key = _owner
path-key = _path

[logger]
blueprint = ftw.blueprints.logger
print_out = python: '%s passed (workflow_state:%s).' % (item.get('_path', ''), item.get('_review_state', ''))

[interfacesupdater]
blueprint = ftw.inflator.creation.interfacesupdater
interfaces-key = _interfaces

[annotations_updater]
blueprint = ftw.inflator.creation.annotationsupdater

[propertiesupdater]
blueprint = collective.jsonmigrator.properties
path-key = _path
properties-key = _properties

[positionupdater]
blueprint = collective.jsonmigrator.order

[reindexobject]
blueprint = plone.app.transmogrifier.reindexobject

[savepoint]
blueprint = collective.transmogrifier.sections.savepoint
every = 100

[workflow]
blueprint = plone.app.transmogrifier.workflowupdater

[workflow_history]
blueprint = collective.jsonmigrator.workflowhistory
